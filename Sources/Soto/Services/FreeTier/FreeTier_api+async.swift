//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2023 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto-codegenerator.
// DO NOT EDIT.

import SotoCore

@available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
extension FreeTier {
    // MARK: Async API Calls

    /// Returns a list of all Free Tier usage objects that match your filters.
    public func getFreeTierUsage(_ input: GetFreeTierUsageRequest, logger: Logger = AWSClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> GetFreeTierUsageResponse {
        return try await self.client.execute(operation: "GetFreeTierUsage", path: "/", httpMethod: .POST, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
}

// MARK: Paginators

@available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
extension FreeTier {
    /// Returns a list of all Free Tier usage objects that match your filters.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func getFreeTierUsagePaginator(
        _ input: GetFreeTierUsageRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<GetFreeTierUsageRequest, GetFreeTierUsageResponse> {
        return .init(
            input: input,
            command: self.getFreeTierUsage,
            inputKey: \GetFreeTierUsageRequest.nextToken,
            outputKey: \GetFreeTierUsageResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }
}
